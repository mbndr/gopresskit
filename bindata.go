// Code generated by go-bindata.
// sources:
// static/css/style.css
// static/templates/company.html
// static/templates/game.html
// DO NOT EDIT!

package presskit

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cssStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x73\xe2\x46\x10\x3d\x4b\xbf\xa2\x83\xcb\x55\x89\x0b\x7d\x51\x85\x9d\x88\x4b\x72\x4a\x2e\xce\x61\xd7\x7f\xa0\x91\x9a\x99\x2e\xe6\x43\x9e\x19\x09\xd8\x2d\xfe\xfb\xd6\x48\x80\x8d\xcd\x5e\xf6\x84\xd0\xbc\x7e\xdd\xef\xf5\xd3\xac\x6d\x7b\x80\xef\x69\xd2\x61\xdb\xb2\x11\x35\x54\xcb\x6e\x0f\xe5\x2a\x4d\x36\xd6\x84\x6c\x83\x9a\xd5\xa1\x86\xd9\x8b\xa3\x75\xdf\x48\x0a\xf0\xfc\x75\x36\x87\x7f\x1c\xa3\x9a\xc3\x7f\xa4\x06\x0a\xdc\xe0\x1c\x3c\x1a\x9f\x79\x72\xbc\x39\xd7\x7a\xfe\x46\x35\x94\xf9\x5f\xa4\x57\x69\xa2\xd8\x50\x26\x89\x85\x0c\x75\x95\x3f\xc6\x77\xc7\x34\x65\x2d\xe6\x30\x70\x4b\x36\x0e\xb1\xe3\x36\xc8\x1a\xaa\xb2\xbc\x1f\x4f\x5b\x1e\xf2\xd7\xde\x06\x8a\x87\xef\x38\xab\x7c\x31\x72\x76\xd6\x73\x60\x6b\x6a\x70\xa4\x30\xf0\x40\xab\x34\xd1\xe8\x04\x9b\x1a\x2a\xd2\x51\xc7\x31\x4d\x7d\x87\x26\xf7\xb6\x77\xcd\x48\xd4\xb2\xef\x14\x1e\x6a\x58\x2b\xdb\x6c\x57\x69\x12\x68\x1f\x32\x54\x2c\x22\x51\x1c\x70\xac\xba\x6b\xac\x09\x64\x02\xc4\x29\x58\xa3\x20\x1f\x1f\xdf\x99\x95\xad\x6d\x08\x56\xd7\xb0\x58\x76\xfb\xa9\xc6\xe0\xc0\x02\xe3\x4c\x20\xab\xdc\xe0\x90\x49\xc2\x96\xdc\x95\xc5\xe5\x68\xf2\x65\xd4\x0b\x4d\xf9\x89\x03\x7f\x46\x11\x97\x74\x22\x19\x7d\xd9\x4d\xc6\xc2\xda\xaa\xf6\x13\x4b\xaf\xf2\x7e\x9b\x19\x1c\x6e\x2e\xfa\x03\xb8\xbb\x25\xb0\x2a\x6f\x08\x54\x9c\x2b\x34\xa2\x47\x41\x99\x27\x45\x4d\x80\xd3\x4f\xdc\x96\xb2\x18\x6e\xda\x29\x17\x97\x6d\x9e\xd3\xf5\x2f\x59\x27\x18\xe7\x30\x7b\x61\x4d\x1e\xfe\xa7\x1d\x7c\xb1\x1a\xcd\x6c\x0e\xe3\x9b\x39\x4c\xc9\xf2\x57\x4c\xac\x45\xfe\xe6\xcd\x07\x33\x17\x97\x91\xcf\xf0\x5e\x45\x98\x62\x1f\x32\x1f\x0e\x8a\xb2\x70\xe8\xa8\x06\xff\xda\xa3\xa3\x6b\xa8\xe2\xbc\xb5\x66\x4c\x4b\x63\x95\x75\x35\xdc\x95\xe5\x9f\x65\x59\x9e\xd3\xd2\x52\x63\x1d\x4e\xd9\x1b\x93\x1d\xa4\xb3\xbd\x90\xbf\x9e\x9c\x73\x4d\x77\xaa\xc8\x62\x9f\x77\xba\x82\xed\x2e\x09\x39\x63\x73\xde\x38\xd4\x94\xc5\xff\xc8\xe6\x94\x91\x5b\x1f\x45\xf1\x00\xcf\x28\xb8\xf9\x0d\x9e\x71\x4b\x1e\x7c\xef\x08\x82\x24\x78\x2b\x65\x0f\x92\x85\x04\x32\x51\x08\x04\x0b\x5e\xda\xdd\x08\x22\x13\xd8\x11\x4c\xdd\xd2\x04\x1e\xe0\x45\xa2\xd9\xfa\x08\x92\x21\x74\x75\x51\xa0\x69\x35\x8a\xdc\x53\xb1\x28\xab\xaa\xa8\xaa\xc2\x91\xef\xac\xf1\x3c\x50\x46\x7a\x4d\xad\x2f\xe0\xa1\xf8\xec\xc0\xf2\x31\x5f\xde\x5f\xcb\x9a\xfa\x5c\x6b\xc1\xb5\xb7\xaa\x0f\x51\xcb\xd9\x89\x44\xd1\x26\x4c\x4f\x57\x17\x47\x72\xba\x65\xde\xee\x91\xbf\x35\xb5\x8c\xf0\xbb\xc6\x7d\x76\x82\x3e\x3d\x3e\x75\xfb\x3f\x62\x8f\x29\x8f\x57\x36\x4f\x5b\x49\x8e\xe9\x31\xfd\x11\x00\x00\xff\xff\x97\x60\xc7\x38\x20\x05\x00\x00")

func cssStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_cssStyleCss,
		"css/style.css",
	)
}

func cssStyleCss() (*asset, error) {
	bytes, err := cssStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/style.css", size: 1312, mode: os.FileMode(436), modTime: time.Unix(1508435100, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCompanyHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x6d\x93\xdb\xb6\x11\xfe\x2c\xfd\x8a\x0d\x9b\xc9\x24\x33\x16\xd9\xbb\x66\xda\xcc\x85\x62\x27\x3e\xc7\xcd\xcd\x38\x8d\x6b\x5f\xdb\x69\xbf\x81\xe4\x4a\x44\x0c\x12\x0c\x00\x4a\x3e\x6b\xf4\xdf\x3b\x00\xf8\x02\xbe\xe9\x24\x2b\xbd\x2f\x27\x11\xfb\xfa\xe0\xc1\x72\x17\x0a\xbf\x78\xf5\xcb\xfd\xe3\x7f\xde\xfe\x08\x99\xca\x59\xb4\x0c\x9b\x7f\x48\xd2\x68\xb9\x08\x73\x54\x04\x92\x8c\x08\x89\x6a\xed\x55\x6a\xb3\xfa\xce\x6b\x9f\x17\x24\xc7\xb5\xb7\xa3\xb8\x2f\xb9\x50\x1e\x24\xbc\x50\x58\xa8\xb5\xb7\xa7\xa9\xca\xd6\x29\xee\x68\x82\x2b\xf3\xe5\x05\xd0\x82\x2a\x4a\xd8\x4a\x26\x84\xe1\xfa\xc6\x8b\x96\x00\x00\x21\xa3\xc5\x07\x10\xc8\xd6\x9e\x54\x4f\x0c\x65\x86\xa8\x3c\x50\x4f\x25\xae\x3d\x85\x1f\x55\x90\x48\xe9\x41\x26\x70\xb3\xf6\x32\xa5\x4a\x79\x17\x04\x49\x5a\xfc\x2a\xfd\x84\xf1\x2a\xdd\x30\x22\xd0\x4f\x78\x1e\x90\x5f\xc9\xc7\x80\xd1\x58\x06\x15\xfd\x40\x55\x70\xeb\xdf\xfe\xc5\xbf\xd5\xea\xf6\x81\xbf\x15\x24\xa5\x58\x28\x3f\xa7\x85\xaf\xad\x7e\x46\x04\xda\x9a\x91\xaa\x0d\x2c\x42\x45\x15\xc3\xe8\x70\x00\xff\x9e\xe7\x25\x29\x9e\xfc\x47\xfd\x04\x8e\xc7\x30\xb0\x6b\xcb\x30\xb0\x68\x86\x31\x4f\x9f\xa2\xa5\xf5\x9a\xd2\x1d\x24\x8c\x48\xb9\xf6\xaa\x0f\x2b\x8d\x1c\xa1\x05\x0a\x70\xbf\xac\x12\x2c\x14\x8a\x3a\xd0\x09\xb5\xad\xa0\xa9\x57\x5b\xec\x89\xd0\x74\xed\x15\x64\x47\xb7\x44\x51\x5e\x78\x8e\x8a\xd9\x8d\x55\x8e\x29\xad\xf2\xd5\xcd\xea\x5b\xc7\x78\x6b\x21\xbb\x69\x14\x0a\xb2\x5b\xe9\xe0\x75\x10\xd3\x39\x66\x37\x13\x06\xc8\x84\x7e\x8d\xa0\x6b\xe5\xdf\x18\x4b\xaa\xd0\x7f\xa3\x77\xe0\x78\xec\xbb\x68\x17\x49\x8c\xcc\xb8\x22\x13\x9e\x2a\xe6\xe4\x56\x90\x1d\xd8\x7f\x2b\x49\x53\x1c\x22\xd3\x53\x64\x34\x0a\x49\x1d\xd3\x1f\x36\x24\x51\x76\xdf\xa3\xd7\xcd\x47\xed\x2f\x0c\x18\x8d\x96\xcb\x85\xf9\x3b\x1c\xe8\xa6\x0b\xef\x15\xca\x44\xd0\x52\xc3\x7b\x3c\xce\xba\x59\xf4\xfd\xa4\x9d\x92\x17\x39\x16\x3a\x5f\x8d\x2b\x2c\xd2\xe3\x71\xda\xf3\x4f\x54\x2a\x2e\x9e\x8e\xc7\x7a\x75\xe0\x23\xb3\xcb\x5e\x54\xcb\x9d\x65\xfb\x67\x4c\x29\xf1\xff\x45\x53\xe4\xf2\xfc\x74\x76\x46\xde\x8b\xac\xde\x05\x8e\x1e\x72\xb2\xc5\x0b\x1c\x51\x23\xef\x45\x56\xef\x02\x47\x3f\x11\xf9\x86\x6f\xf9\x2f\xe2\x21\x31\xfb\x34\x89\x18\xe3\x5b\xee\x45\x5a\x0e\xbe\x22\x79\xf9\x3d\x68\xe1\x8b\xb6\xe4\x1f\x15\x57\x26\x9f\x49\xfb\xbf\x99\x55\x2f\x7a\x8f\x0c\x13\x85\x29\xfc\x20\x14\x4d\xd8\x99\x89\x34\x3e\xee\x05\xa6\x54\xcd\x3a\x51\x48\x72\x2f\x7a\x44\x92\x5f\x66\x55\xd7\x9a\x64\xde\x6c\x62\xd7\xbd\xa8\x16\x9c\x35\x3e\x3e\x9a\x41\xc5\xfa\x07\x36\x0c\x52\xba\x8b\xa6\x8b\x55\xfd\xea\x98\xad\x54\x7f\x32\x95\x6a\x39\xda\x5f\x53\x5b\x26\x88\xb4\x08\x69\xbe\x6d\x8c\x35\x15\x48\x8a\xc4\x16\x20\x57\xd9\x14\x9e\x65\x2f\x97\x51\x2a\xcf\x57\xdd\x19\xd1\x5e\x0e\xb7\xab\x3f\x4f\x54\xdb\x56\x33\xbb\x35\x48\x4c\xd7\xa2\xec\xf6\x54\x31\x2b\xe7\xcd\x9a\xf5\x38\x7a\x85\x3b\x64\xbc\x44\x71\x17\x06\x71\x14\xc6\xe2\x19\x8d\x86\x00\x73\x65\x9f\x3c\x6f\xa3\x4f\xb4\x97\x44\x62\xfa\xe0\x9c\xc1\x85\x79\x02\xb4\x00\xd7\x43\x2d\x06\x9d\x5c\xb3\x2b\xb3\xa1\x06\xe5\x4c\x89\x7e\xcd\xab\x22\xa5\xc5\xf6\x15\x51\xa8\xed\x9d\x82\x6f\x76\xb1\xc6\xaf\xb1\x05\xda\x58\x87\xe1\x49\xb5\x9f\x89\x48\x32\xb8\xfd\xe3\xcd\x77\x27\x7c\xeb\xe8\xcf\x38\xa7\xbd\xb7\xe1\xb5\xc9\xd4\xc6\xce\x4c\xa3\xe5\xc2\x75\xaf\xee\xab\x21\x78\x2b\x50\xca\xba\x0c\x5d\x8b\x80\xb1\x05\x01\xbc\xac\x24\x2d\xf4\xc7\xba\xce\x5d\x0a\x49\x4e\x28\x53\xfc\xce\x4d\xde\x0d\x73\x84\xcc\x60\xf1\xf7\x01\xe6\x3d\x4f\x28\x61\xa7\x8e\xc8\xf3\xf5\xc1\xda\x38\xaf\x38\x1c\x0e\x82\x14\x5b\x9c\x08\xa0\x39\xda\x3d\xca\xf4\x28\xe2\x52\xc2\xe2\x7c\xc1\x29\x3f\x81\xc5\xdf\x48\x8e\x6f\xa8\xbc\x9a\x18\xef\x90\x21\x91\x28\x1d\x22\xb4\x11\xda\xac\xbf\x94\xac\xda\xbe\x80\x2f\x4d\x73\x0f\x77\xeb\xbe\xef\x11\x02\x5b\x92\xa3\x0c\x0e\x07\xab\x07\xc7\x63\x60\x80\xa8\xd5\xc7\x40\xb4\xe9\x5d\x4d\x8b\x1f\xd2\x54\xb3\xed\x5a\x44\x6a\x33\xf3\x80\x4c\x39\xec\x64\xc0\xd7\x49\xfe\x5f\x12\x7c\x9b\xf1\x02\xaf\xa3\xbd\x31\x71\x2e\xeb\x07\x9e\xe1\x32\xba\x4e\x8b\x99\x8e\xe8\xe2\x4e\xe2\x5b\xd3\x49\x9c\x31\x97\xcc\x63\x5c\x77\x1b\xf3\x13\x89\xee\x38\x4e\x11\xc7\xc5\xc3\x51\x34\x94\x3e\x6f\xff\xba\x41\x66\xce\xcd\xa2\x09\x73\x3c\xd4\x98\xf0\x66\x88\x38\x9a\x90\x16\x61\x6c\xe2\x6d\x3b\x3e\xbd\xe3\xdd\xa2\x4d\xe6\x11\x3f\xaa\x7e\xf4\x1d\x55\x17\x27\xfb\x43\x98\x6e\x6e\x4f\x3d\xce\xc4\x44\x37\xdb\xce\x5f\x36\xac\x3a\xf7\xe1\x94\xd5\x66\x7e\x38\x40\x9d\xb8\xab\xde\xb5\x4e\x61\x97\x48\x9d\x7f\xd7\xbf\xc5\x11\x7c\xed\x14\xe7\x6f\xdc\x13\x3a\x60\x9e\x40\x59\xf2\x42\xd2\x5d\x7d\x95\x53\x37\x76\xff\x94\xf8\xb0\x11\x24\xc7\xfb\xe6\xba\xe2\x78\xa4\xe6\x41\x77\x81\x51\x23\xe6\xb9\x87\x1f\xfc\x1f\xf3\x18\x53\xa7\xc3\xab\x31\x6a\xbe\x94\x5d\x7a\x58\x74\x72\x06\xb2\x11\xa7\x26\xa7\xca\x1e\x7c\xc3\xd9\xb1\x85\xaf\x2d\xd1\x9f\x68\x19\x58\x29\xff\x13\x2d\xbd\x68\x90\x3f\x61\x28\x94\x17\xa5\x7c\x5f\x30\x4e\x52\x20\x8c\x81\x15\x07\x22\xe1\x13\x2d\x41\xf7\x79\x74\x87\x16\x51\x1b\xcb\x7f\x69\xf9\x9e\x7e\x42\xf0\x1c\xc3\x06\x67\x93\xab\x7d\xef\x4f\x60\xad\x47\x0b\x68\x22\x6e\x69\xd7\xdf\x66\x9b\x88\x8b\xdf\x89\x4a\x71\xb3\xba\x75\xd0\xef\xbd\x97\xa1\xb7\x31\x76\x60\x6a\x27\xa4\xfe\x62\x17\xef\x60\xb7\x86\x7b\xe4\xac\x85\x65\xf4\x98\xa1\x40\x20\x02\x61\x43\x04\xe4\x5c\x60\x0b\xdc\x8e\x50\x46\x62\x86\xb0\xe1\x02\xa6\x46\x8c\x17\x10\x57\x0a\x54\x86\xd2\x5a\x50\x19\x02\x2f\x50\xc2\x1e\x61\x83\x4c\xc1\x9e\x57\x2c\x85\x18\x21\xe7\x52\x41\x25\x71\x53\x31\x50\x1c\x9e\x78\xe5\xc3\xc3\x46\xff\x87\x8c\xec\x10\x64\x89\x09\xdd\xd0\x04\x04\xfe\x56\xa1\x54\xf2\x05\x94\xe6\x25\x0f\x29\x87\xc9\x3b\xa0\xba\x19\x84\xca\x4c\xe8\x5f\x74\x94\x7c\x9e\x83\x93\x17\x0e\x0d\x15\x67\x2e\x1a\xa6\x19\xa9\x85\xcf\xe2\xa3\x16\x04\x52\xa4\x40\x13\x5e\x9c\x43\xc9\xd6\xf2\x67\x13\xb2\xcb\x57\x27\x73\x35\x13\x3b\x53\x27\x39\x39\x27\x76\x82\x9d\xfd\xf2\xed\x94\x8a\xfe\x75\xd0\x35\x61\x6b\x53\x67\x84\x3d\x16\x3b\x2f\xec\xde\x91\x3a\x41\xbf\xb6\x09\xdb\x13\x91\x8e\x8a\x60\x73\x05\x65\x57\x6b\xf6\xbd\xc3\x84\x6f\x0b\xea\xbc\xee\x8d\x4a\xc5\xc6\x95\xa7\x6f\x1d\xfa\xb7\x45\x26\xcb\x7e\x0b\xe0\xf5\x3a\xbe\x30\xa1\x0a\xa3\x95\x39\xe7\x0f\xc5\x86\x9b\x37\x90\x79\xd6\xe5\x3f\xbe\x52\xaa\x17\xda\x70\x9c\xec\x9b\xa2\x33\x91\x7f\xff\x2a\x6e\x98\xff\xc4\x15\xdc\x79\x89\x5b\xb3\x53\x89\xd7\x6d\xc3\x7c\xc6\xaf\x05\xcf\xc7\x19\x8f\x67\xa4\xc1\xa0\x64\x9e\xf4\x06\xe8\xdf\x1b\xaa\x1f\xd2\xd4\x6c\x3e\x61\xf3\x7c\x69\x45\x40\x07\x34\xdd\x7d\x4c\xd8\x3b\xb7\x09\xe9\x8f\x80\x43\x16\x39\xaf\x09\xa2\xbe\x2a\x62\x59\x7e\xbf\xbc\x0e\x3d\xb7\xbb\x70\xa1\x9b\xc1\x6b\xfa\xe2\x6f\x31\x86\x72\x78\x39\x7b\x76\x45\x69\x00\xef\xae\x6f\xdb\xc3\x59\x22\x51\xb4\xd8\xc2\x3d\x67\x8c\xc4\x5c\x10\xc5\x85\x1c\x34\xbe\xc3\x2d\xa8\xe3\x00\xb7\xf5\x2d\xdd\xca\x64\xb7\xe0\x2d\x0a\x59\xb7\xea\x83\xa1\xee\xc4\xe8\xfe\x8e\xb7\x03\xab\x53\xc3\xe6\x9a\x65\xb7\x6e\x0d\x50\x7d\xee\x0a\xfa\x62\xf0\xc6\x97\xd4\xa7\x41\xaa\x1d\x3e\x87\xd2\xdf\x49\x3e\xc5\xd3\xcf\x3f\xba\x17\xc3\x35\x58\xb1\x53\x43\x7f\x40\x2a\xa3\x97\x15\xd5\xed\x10\x55\x59\xd7\xcd\x34\xbf\x94\x6e\xa9\xca\xaa\xd8\xfc\x3e\x9a\xc7\x45\x2a\x82\x2d\x2f\xf5\x8c\xfe\x81\x2a\x2f\xea\x3e\x7f\xfd\x8d\x0e\x13\x56\x20\x11\x81\x0b\xba\xa5\xfa\xc4\xf7\xac\xdd\x05\xc1\x7e\xbf\xf7\x77\x8c\xe4\x31\xa2\x30\x26\x8d\x7a\x60\x9a\x26\xbf\xcc\xca\xbf\x96\xeb\xc4\xf2\xcf\x8b\xea\x0f\xf6\xe7\x82\xf2\xe4\xef\x00\xce\xd7\x66\x1e\x5e\x86\x81\xfd\xad\x34\x0c\xec\xef\xd1\xff\x0b\x00\x00\xff\xff\x21\x77\xf0\xef\xa7\x1e\x00\x00")

func templatesCompanyHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCompanyHtml,
		"templates/company.html",
	)
}

func templatesCompanyHtml() (*asset, error) {
	bytes, err := templatesCompanyHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/company.html", size: 7847, mode: os.FileMode(436), modTime: time.Unix(1508545294, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGameHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\x5f\x73\xdb\xb8\x11\x7f\xa6\x3e\xc5\x1e\x3a\x73\xe3\x4c\x4d\x72\xec\xbb\x69\x3b\x09\xc5\x9b\xc4\x4e\x7a\x9e\xb9\x36\x69\xce\x6d\xa7\x7d\x03\xc9\x95\x08\x1b\x24\x18\x00\x94\xe2\x78\xf4\xdd\x6f\x00\xfe\xa7\x48\x49\xb6\xa3\x17\x91\xc0\xee\x62\xf7\xb7\x8b\xc5\x62\x19\xfc\x70\xfd\xf1\xea\xf6\x7f\x9f\xde\x43\xaa\x33\x1e\x2e\x82\xe6\x0f\x69\x12\x2e\x9c\x20\x43\x4d\x21\x4e\xa9\x54\xa8\x97\xa4\xd4\x2b\xf7\x6f\xa4\x1d\xcf\x69\x86\x4b\xb2\x61\xb8\x2d\x84\xd4\x04\x62\x91\x6b\xcc\xf5\x92\x6c\x59\xa2\xd3\x65\x82\x1b\x16\xa3\x6b\x5f\xce\x81\xe5\x4c\x33\xca\x5d\x15\x53\x8e\xcb\x0b\x12\x2e\x00\x00\x02\xce\xf2\x7b\x90\xc8\x97\x44\xe9\x07\x8e\x2a\x45\xd4\x04\xf4\x43\x81\x4b\xa2\xf1\xab\xf6\x63\xa5\x08\xa4\x12\x57\x4b\x92\x6a\x5d\xa8\xd7\xbe\x1f\x27\xf9\x9d\xf2\x62\x2e\xca\x64\xc5\xa9\x44\x2f\x16\x99\x4f\xef\xe8\x57\x9f\xb3\x48\xf9\x25\xbb\x67\xda\xbf\xf4\x2e\xff\xea\x5d\x1a\xf6\x6a\xc0\x5b\x4b\x9a\x30\xcc\xb5\x97\xb1\xdc\x33\x52\x9f\xa1\x81\xe7\xf9\x9e\x67\x65\x5a\xda\x5a\x8c\x13\x68\xa6\x39\x86\x8f\x8f\xe0\xfd\x9d\x66\xe8\xdd\x9a\x57\xd8\xed\xc0\x05\x33\x76\x25\xb2\x82\xe6\x0f\xed\x70\xe0\x57\xf4\x8b\xc0\xaf\x70\x0e\x22\x91\x3c\x84\x8b\x4a\x9f\x84\x6d\x20\xe6\x54\xa9\x25\x29\xef\x5d\x83\x29\x65\x39\x4a\xe8\xbf\xb8\x31\xe6\x1a\x65\x6d\xc2\x04\xdb\x5a\xb2\x84\xd4\x12\x07\x24\x2c\x59\x92\x9c\x6e\xd8\x9a\x6a\x26\x72\xd2\x63\xb1\x7e\x72\x33\x4c\x58\x99\xb9\x17\xee\xcf\x3d\xe1\xad\x84\xf4\xa2\x61\xc8\xe9\xc6\x35\xca\x1b\x25\xa6\x6d\x4c\x2f\x26\x04\xd0\x09\x7e\xab\x53\x21\x51\xa9\x7b\xa6\x5d\xe3\x8e\x06\xee\x3f\xdd\x29\x57\xe2\x97\x92\x49\x4c\x48\x68\x49\xe0\x9e\xe9\xc0\xa7\xe1\xc2\x71\x1c\x27\x50\xb1\x64\x85\xae\x5e\x7c\x1f\x6e\x3f\x5e\x7f\x04\xa6\x40\xa7\x4c\x41\x21\x94\x62\x11\x47\xd8\x32\x9d\x8a\x52\xc3\x1d\xdd\xd0\x8a\xe1\x17\xcb\xb0\xa1\x12\x0a\xaa\x53\x58\xc2\x96\xe5\x89\xd8\x7a\x5c\xc4\x16\x16\xcf\x0c\x9b\xe8\x7e\x33\x20\xe4\x4c\x69\x58\xda\x47\x4f\x15\x9c\xe9\x33\xe2\x93\x57\x1d\x8d\x2a\xa3\x11\x99\x79\xf4\x14\x67\x31\x9e\xb9\x3f\x9d\x83\x7b\xb1\x4f\x0d\xcb\x3e\x9f\x77\x27\x58\x6e\xc5\xc2\x9f\x81\xf8\xa4\x23\x97\x42\xe8\x9a\xde\x2a\x20\xb1\xe0\x34\xc6\xb3\x9a\xf9\x1c\x48\xa3\x4a\x22\xe2\x32\x33\x81\xbe\x46\xfd\x9e\xa3\x79\x7c\xf7\x70\x93\x9c\x8d\x30\x7e\xe5\x19\x90\x61\xd9\x4a\xae\xb8\x03\xbf\x01\x75\xcf\x79\x25\xef\x85\x4b\x4e\x37\x50\xfd\xb9\x8a\x25\x38\x0e\xb6\x01\x23\x67\x61\x40\x1b\x9f\xae\x68\xac\xab\x4d\x16\x7e\x68\x1e\x8d\x47\x03\x9f\xb3\x70\x61\x75\x70\x9c\xc7\x47\xb6\xaa\x37\xd3\x35\x56\x0a\x31\x91\xef\x76\xb3\x6b\x38\xc3\x45\x92\x8e\x89\x84\x3d\x09\xdd\x42\xcd\x3a\x98\x27\xbb\xdd\xc4\xb2\xbf\x32\xa5\x85\x7c\xd8\xed\xea\xa9\xd1\x02\x69\x35\x4d\xc2\x9a\xee\x24\xc1\xff\xc0\x84\x51\xef\x3f\x2c\x41\xa1\x4e\xb7\x65\x63\xe9\x49\x58\xf1\x3d\x61\xa1\x9b\x8c\xae\xf1\x09\x0b\x31\x4b\x4f\xc2\x8a\xef\x09\x0b\xfd\x4a\xd5\x6f\x62\x2d\x3e\xca\x9b\xd8\x3a\x69\x12\x31\x2e\xd6\x82\x84\x86\x0e\x7e\xa4\x59\xf1\x06\x0c\xf1\xe9\xfe\xf8\x57\x29\xb4\x35\x66\x52\xf8\x17\x3b\x4b\xc2\xdf\x91\x63\xac\x31\x81\xb7\x52\xb3\x98\x9f\x68\x85\x5d\xe0\x4a\x62\xc2\xf4\xec\x0a\x1a\x69\x46\xc2\x5b\xa4\xd9\x49\x22\x9b\x7c\x78\x65\x52\x76\x3c\x2f\x36\xae\xe6\x49\x58\x13\xce\x0a\xdf\xdf\x8e\x7e\xc9\x87\x9b\x34\xf0\x13\xb6\x09\xa7\x73\x7e\x7d\x36\xcf\x26\xfc\x9f\x6c\xc2\x5f\xec\x79\xd6\xa6\xe8\x89\x10\x72\x02\x96\xad\x1b\x61\x4d\x22\x57\x32\x5e\x12\x73\x1a\xf4\x99\x61\xb7\x23\xe1\x62\x60\xcb\x9e\x29\xc7\x0f\xaf\x19\xd2\x81\x0d\x97\xee\x5f\x26\x0e\xad\x96\x33\xbd\xb4\x48\x4c\xe7\x9f\xf4\xf2\x50\x02\x2b\xe6\xc5\xda\xf9\x28\xbc\xc6\x0d\x72\x51\xa0\x7c\x1d\xf8\x51\x18\x44\xf2\x08\x47\x13\x00\x73\xa7\x27\x3d\x2e\x63\x18\x68\xef\xa8\xc2\xe4\xa6\xb7\xfb\x1c\x3b\x02\x2c\x1f\xd4\x20\x35\x19\x74\x74\x8d\x57\x66\x55\xf5\x8b\xa9\xb4\xfc\x19\x39\x52\x85\xd7\xb4\xde\x95\x87\xb0\x9b\x9d\xac\xc1\xab\x65\x81\x15\xd6\x01\x78\x90\xed\xf1\x51\xd2\x7c\x8d\x33\xda\x38\xad\x71\xe0\x19\x3c\xad\xb8\x91\xc1\xf3\x2a\x1b\x8b\x8f\xa5\x8b\x4f\x9c\xea\x95\x90\xd9\x8b\x8d\x6f\x05\x3d\xcb\xf0\x81\x1a\xcd\xaf\x8d\x2e\x63\xfe\x6f\xa6\xbe\x35\x7b\xd0\xbe\xd0\x08\x79\x3f\xc0\xbe\x1b\x28\x4d\x80\xfd\x17\x23\xc5\x34\x56\x2b\xbd\x14\x9b\x5a\xd8\x89\xc8\x0c\xcc\xde\xd3\xa7\x0f\xc3\xa4\xb2\x35\x2c\x2f\x8d\x0b\xc9\xe2\x97\xef\x88\x4a\xca\xf3\x22\xa2\x55\xe0\xbb\x6f\x82\x69\x3a\x7b\xe8\x3c\x39\x59\xff\x6c\x93\xf5\xb1\x72\x6f\x5e\xbd\x3a\x9b\xcf\x17\x7a\x26\xa3\x1f\xf2\x41\x7b\x5b\xeb\x71\xd9\x10\x38\xc1\xc9\x5d\x71\x38\xb7\x80\xd3\x28\xb8\x5f\x28\x5a\xc5\x1a\x91\x7d\xcf\xed\x95\x9c\x4e\x10\x59\x35\xdb\x83\xd4\xc4\x43\x37\x59\xd9\x70\x8b\x5f\xf5\x50\xef\xce\xb9\x47\xcc\xf8\x80\x54\x97\xf2\x48\x89\x38\xb6\xa3\x61\x1a\x18\x12\x98\x5a\xc4\x99\xb4\xaa\xb7\x48\x97\xa0\x38\x0b\x9b\xa8\xec\x15\x3b\x63\xcd\x9d\xaa\xc6\x39\x3d\x0a\x4f\x1d\x4e\xe5\x44\xad\xd3\xd6\xe5\xd5\xd2\xb5\xdd\xe3\xea\xbb\x35\xfa\xf1\x11\x6a\x33\xfb\xec\xdd\xc1\x1a\x74\xfe\xa8\xdd\xd8\x9d\xee\x51\x08\x67\xbd\xdc\xfc\xaa\xbf\x35\x47\x9b\x46\xa2\x2a\x44\xae\xd8\xa6\xee\xa4\xd4\xc7\xfe\xbf\x15\xde\xac\x24\xcd\xf0\xaa\xe9\x09\xec\x76\xcc\x0e\x74\x5d\x82\x1a\x31\xd2\x87\x17\xbc\xf7\x59\x84\x09\xf4\x31\xb6\x18\x35\x2f\x45\x67\x1e\xe6\x1d\x9d\x85\x6c\x2f\x9a\x26\x6f\x1b\x03\xf8\xc6\x77\x8a\x16\xbe\x36\x59\x7f\x63\x85\x5f\x51\x79\xdf\x58\x41\xc2\x91\xfd\x94\xa3\xd4\x24\x4c\xc4\x36\xe7\x82\x26\x40\x39\x87\x8a\x1c\xa8\x82\x6f\xac\x00\x2a\xe3\x94\x6d\xb0\x42\xb4\xd2\xe5\xff\xac\xf8\x9d\x7d\x43\x20\x3d\xc1\x16\x67\x6b\x6b\xdb\x3f\x18\x63\x6d\x0a\x4f\x68\x34\x6e\xc3\x6e\xe8\xe6\xca\x90\x3e\x7e\x07\x92\xdc\x85\x7b\xd9\x43\x7f\x70\x3e\xc1\xc0\x31\x55\x39\xdd\xd6\xcf\xc3\xc9\x4e\xdf\x91\xb7\xc6\x3e\xea\xcd\x05\x45\x78\x9b\xa2\x44\xa0\x12\x61\x45\x25\x64\x42\x62\x0b\xdc\x86\x32\x4e\x23\x8e\xb0\x12\x12\xf6\xda\x56\xe7\x10\x95\x1a\x74\x8a\xaa\x62\xd7\x29\x82\xc8\x51\xc1\x16\x61\x85\x5c\xc3\x56\x94\x3c\x81\x08\x21\x13\x4a\x43\xa9\x70\x55\x72\xd0\x02\x1e\x44\xe9\xc1\xcd\xca\xfc\x43\x4a\x37\x08\xaa\xc0\x98\xad\x58\x0c\x12\xbf\x94\xa8\xb4\x3a\x87\xa2\x2a\xf5\x12\x01\x93\x2d\x81\xfa\x3e\x04\xa5\xbd\xb9\xfd\xd0\xc5\xe3\xf1\x00\x9c\xbc\x85\x36\x71\x38\x73\xfb\x9c\x0e\x47\x43\x7c\x52\x30\x1a\x42\xa0\x79\x02\x2c\x16\xf9\x29\xf1\xd8\x4a\x7e\x76\x34\x76\xf6\x1a\x63\x5e\x1c\x86\x9d\xa8\x83\x01\x39\x47\x76\x20\x34\x87\x47\x50\x2f\x4f\x0c\x7b\x04\x2f\x51\xdb\x88\x3a\x41\xed\x7d\xb2\xd3\xd4\x1e\xec\xa7\x03\xe1\x67\x37\xcf\xdb\x2d\x95\xc9\x5e\xfa\x6b\xfa\x12\xd5\x6c\x1d\x7a\x9f\x31\x16\xeb\x9c\xf5\xca\x14\x67\x78\x84\x76\x39\xa7\x27\x1a\x86\x2d\x04\x6b\xdf\xb0\x74\x21\x83\x0a\x2f\x88\x99\xc6\xb0\xea\x40\xdf\xe4\x2b\x61\x0f\x1e\x3b\xd6\x59\xbe\xdf\x67\xa8\x27\x5a\x5d\x7a\x76\x37\xb9\x66\x6c\xf9\xb0\x33\x33\xb6\x7c\xa2\x23\x73\x82\xc9\x95\xcc\x29\x93\xeb\x72\x67\xde\xd6\x0f\x52\x64\xfb\xb6\xee\xdf\x89\x46\x17\x23\x3b\x32\xb8\x06\x7c\x57\x90\xde\x26\x89\x75\x38\xe5\xf3\x31\xd2\x92\x80\xd1\x66\xba\xd6\x18\x0b\x3b\xb5\xde\xe8\xc3\xb5\x1f\x39\xbd\x13\x81\xea\x1f\xf3\x48\x15\x6f\x16\x2f\xc3\xad\x5f\x48\xf4\x41\x9b\x41\x6a\xba\x03\xe4\x38\x87\x5b\x74\x27\x27\x8f\x06\xea\xae\x89\xd7\x6e\xc5\x02\xa9\x66\xf9\x1a\xae\x04\xe7\x34\x12\x92\x6a\x21\xd5\xa8\x48\x1f\x80\x5f\x2b\x01\xfd\x32\xbd\xe8\x67\xa0\x0a\xfc\x4f\x28\x55\x7d\xa1\x18\xa2\x7f\xe8\x7a\xfe\x59\xb4\xed\x9f\x5e\xae\x9a\x2b\xec\xfb\xf9\x69\x84\xe7\xb1\x2e\xe4\x93\x91\xdb\xef\x53\x4e\x22\x34\x5e\xf0\x18\x4a\xff\xa4\xd9\x54\x84\x3e\x7f\xbb\x3e\x19\xae\xd1\x4c\x75\x35\x18\xde\x80\x8a\xf0\x5d\xc9\x4c\xd9\xc3\x74\xda\x55\x2d\xcd\xd7\xc8\x35\xd3\x69\x19\xd9\x6f\x90\x59\x94\x27\xd2\x5f\x8b\xe6\x43\x0b\x09\xbb\xe7\xb3\x57\x46\x4d\x70\x41\x21\x82\x90\x6c\xcd\xcc\x46\x1f\x48\x7b\xed\xfb\xdb\xed\xd6\xdb\x70\x9a\x45\x88\xd2\x8a\xb4\xec\xbe\x2d\x8e\xbc\x22\x2d\x7e\x29\x96\x71\x15\x7f\x24\xac\x1f\xaa\x8e\x71\x71\xb0\x15\xdc\x7b\x6d\xee\xeb\x8b\xc0\xaf\xbe\x3a\x06\x7e\xf5\xcd\xf7\x8f\x00\x00\x00\xff\xff\x75\xf5\xe6\x7a\x0b\x1e\x00\x00")

func templatesGameHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesGameHtml,
		"templates/game.html",
	)
}

func templatesGameHtml() (*asset, error) {
	bytes, err := templatesGameHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/game.html", size: 7691, mode: os.FileMode(436), modTime: time.Unix(1508545320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"css/style.css": cssStyleCss,
	"templates/company.html": templatesCompanyHtml,
	"templates/game.html": templatesGameHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"css": &bintree{nil, map[string]*bintree{
		"style.css": &bintree{cssStyleCss, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"company.html": &bintree{templatesCompanyHtml, map[string]*bintree{}},
		"game.html": &bintree{templatesGameHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

